<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jms 
		http://www.springframework.org/schema/jms/spring-jms.xsd
		http://activemq.apache.org/schema/core 
		http://activemq.apache.org/schema/core/activemq-core.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.jswiente.phd.prototype" />
	<context:mbean-export />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datagenerator.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="dataGenerator" class="com.jswiente.phd.prototype.DataGenerator.DataGenerator">
		<property name="generator" ref="usageEventGenerator" />
		<property name="writerFactory" ref="WriterFactory" />
		<property name="mBeanServerConnection" ref="remoteMbeanServerConnection" />
		<property name="objectName" value="bean:name=performanceMonitor" />
		<property name="methodName" value="start" />
	</bean>

	<!-- A connection to ActiveMQ -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
		p:brokerURL="${datagenerator.activemq.brokerUrl}" />

	<!-- A cached connection to wrap the ActiveMQ connection -->
	<bean id="cachedConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory"
		p:targetConnectionFactory-ref="amqConnectionFactory"
		p:sessionCacheSize="10" />

	<!-- A destination in ActiveMQ -->
	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="BILLING.USAGE_EVENTS" />
	</bean>

	<!-- A JmsTemplate instance that uses the cached connection and destination -->
	<bean id="producerTemplate" class="org.springframework.jms.core.JmsTemplate"
		p:connectionFactory-ref="cachedConnectionFactory"
		p:defaultDestination-ref="destination" />

	<bean id="JMSWriter" class="com.jswiente.phd.prototype.DataGenerator.JMSWriter"
		scope="prototype" lazy-init="true" />

	<bean id="FileWriter" class="com.jswiente.phd.prototype.DataGenerator.FileWriter"
		scope="prototype" lazy-init="true" />

	<bean id="WriterFactory" class="com.jswiente.phd.prototype.DataGenerator.WriterFactory">
		<lookup-method name="createJMSWriter" bean="JMSWriter" />
		<lookup-method name="createFileWriter" bean="FileWriter" />
	</bean>

	<bean
		class="org.springframework.jmx.support.MBeanServerConnectionFactoryBean"
		id="remoteMbeanServerConnection">
		<property name="serviceUrl"
			value="${datagenerator.jmx.remoteMbeanServer.serviceUrl}">
		</property>
		<property name="connectOnStartup" value="false" />
	</bean>

	<!-- Now expose the server for remote access via RMI Local access: service:jmx:rmi://localhost/jndi/rmi://localhost:10099/jmxrmi 
		Remote access: service:jmx:rmi://your.server.com/jndi/rmi://localhost:10099/jmxrmi -->
	<bean class="org.springframework.jmx.support.ConnectorServerFactoryBean"
		depends-on="rmiRegistry">
		<property name="objectName" value="connector:name=rmi" />
		<property name="serviceUrl"
			value="service:jmx:rmi://localhost/jndi/rmi://localhost:10099/jmxrmi" />
	</bean>

	<bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
		<property name="port" value="10099" />
	</bean>


</beans>
